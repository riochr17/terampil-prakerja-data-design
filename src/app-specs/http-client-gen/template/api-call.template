import axios, { AxiosInstance, AxiosResponse, InternalAxiosRequestConfig } from "axios";
{{#each import_dependencies}}{{this}}{{/each}}

export interface APICallParameters {
  base_url: string
  intercept?: {
    request?: boolean
    response?: boolean
  }
}

export class APICall {
  private axios_instance?: AxiosInstance;

  constructor(parameters: APICallParameters) {
    this.axios_instance = axios.create({
      baseURL: parameters.base_url
    });
    if (parameters.intercept?.request) {
      this.addRequestLogInterceptor();
    }
    if (parameters.intercept?.response) {
      this.addResponseLogInterceptor();
    }
  }

  private async addRequestLogInterceptor() {
    this.axios_instance?.interceptors.request.use(async (original_request: InternalAxiosRequestConfig) => {
      console.log(original_request);
      return original_request;
    });
  }

  private async addResponseLogInterceptor() {
    this.axios_instance?.interceptors.response.use(async (original_response: AxiosResponse) => {
      console.log(original_response);
      return original_response;
    });
  }

{{#each functions}}{{this}}{{/each}}
}
